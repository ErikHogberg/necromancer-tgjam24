[gd_scene load_steps=47 format=3 uid="uid://cg0lwr63age0v"]

[ext_resource type="QuadMesh" uid="uid://c72qv7tsxflig" path="res://gfx/summonCircleMesh.tres" id="1_7tuv2"]
[ext_resource type="Script" path="res://scripts/Player.gd" id="1_l8nk1"]
[ext_resource type="Texture2D" uid="uid://c18busabi562l" path="res://gfx/Sprites/Evil Wizard 3/Sprites/Run.png" id="1_nbkfe"]
[ext_resource type="Script" path="res://scripts/summonNode.gd" id="2_jlwc0"]
[ext_resource type="PackedScene" uid="uid://cjv1ybdpcwsqh" path="res://prefabs/zombie.tscn" id="4_1pmvf"]
[ext_resource type="PackedScene" uid="uid://22eqere84d0x" path="res://prefabs/tombstone.tscn" id="7_7h5fj"]
[ext_resource type="PackedScene" uid="uid://gbc3ppf08ty" path="res://gfx/Goose/PBR - Metallic Roughness Alpha-blend.glb" id="14_ivteh"]

[sub_resource type="GDScript" id="GDScript_am0de"]
script/source = "extends Node3D
class_name Tiler

@export var Tile: StaticBody3D
@export var tilingSize: Vector2 = Vector2(100,100)
@export var tilingDistance: float = 150
@export var tilingOffset: Vector2 = Vector2(0,0)

var tiles: Array[StaticBody3D] = []
var currentCenterTileIndex = 5

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	tiles.resize(9)
	tiles[0]=Tile
	for n in 8:
		tiles[n+1] = Tile.duplicate(DuplicateFlags.DUPLICATE_USE_INSTANTIATION)
		add_child(tiles[n+1])
	
	for x in 3:
		for y in 3:
			var i = 3*y+x
			tiles[i].position = Vector3(tilingSize.x * x, 0, tilingSize.y*y)
			tiles[i].get_child(2).text = str(i)

	
func flatPos(pos: Vector3) -> Vector2:
	return Vector2(pos.x, pos.z)
	
var lastDir: Vector2
var left = false
var right = false
var up = false
var down = false

func shouldTile(tilePos: Vector3, refPos: Vector2)-> bool:
	lastDir = flatPos(tilePos) - refPos
	
	up = false
	down = false
	right= false
	left = false
	
	if lastDir.x < -tilingDistance:
		left = true
		return true
	if lastDir.x > tilingDistance:
		right= true
		return true
	if lastDir.y < -tilingDistance:
		up = true
		return true
	if lastDir.y > tilingDistance:
		down = true
		return true
				
	return false
	
func update_pos(pos: Vector2):
	var refPos = pos + tilingOffset
	for x in 3:
		for y in 3:
			var i = y*3+x
			var tile = tiles[i]
			if shouldTile(tile.global_position, refPos):
				if left:
					tile.global_position.x += tilingSize.x *3
				elif right:
					tile.global_position.x -= tilingSize.x*3
				if up:
					tile.global_position.z += tilingSize.y*3
				elif down:
					tile.global_position.z -= tilingSize.y*3
				
"

[sub_resource type="BoxShape3D" id="BoxShape3D_q4vtr"]
size = Vector3(100, 20, 100)

[sub_resource type="Gradient" id="Gradient_ji2rm"]
colors = PackedColorArray(0.0463413, 0.164075, 0.204398, 1, 2.28621e-07, 0.351841, 0.211535, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2uepw"]
noise_type = 0
fractal_type = 3
domain_warp_enabled = true

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_5csxy"]
color_ramp = SubResource("Gradient_ji2rm")
noise = SubResource("FastNoiseLite_2uepw")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3pkho"]
disable_fog = true
albedo_texture = SubResource("NoiseTexture2D_5csxy")

[sub_resource type="QuadMesh" id="QuadMesh_tn8qn"]
material = SubResource("StandardMaterial3D_3pkho")
size = Vector2(100, 100)

[sub_resource type="GDScript" id="GDScript_wije0"]
script/source = "extends Node3D

@export var leftRot: Vector3
@export var rightRot: Vector3

func left():
	rotation_degrees = leftRot
	
func right():
	rotation_degrees = rightRot

func turn(turning_left: bool):
	if turning_left:
		left()
	else:
		right()
"

[sub_resource type="Animation" id="Animation_t3tpp"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_je5x1"]
resource_name = "run"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.889),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0, 7]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3ukah"]
_data = {
"RESET": SubResource("Animation_t3tpp"),
"run": SubResource("Animation_je5x1")
}

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_at773"]
gravity = Vector3(0, 0, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_g27cc"]
shading_mode = 2
diffuse_mode = 3
specular_mode = 2
albedo_color = Color(0.376471, 1, 0.156863, 1)
emission_enabled = true
emission = Color(0.215686, 1, 0.262745, 1)
emission_energy_multiplier = 5.04

[sub_resource type="QuadMesh" id="QuadMesh_4us6d"]
material = SubResource("StandardMaterial3D_g27cc")
orientation = 1

[sub_resource type="GDScript" id="GDScript_wn8fd"]
script/source = "extends Node3D

@export var TombstonePrefab: PackedScene
@export var TombstoneParent: Node3D

@export var Distance: float = 500
@export var Buffer: float = 100

@export var StoneCapacity: int = 100
@export var MaxNewStones: int = 5

var refPos: Vector3

var stones: Array[Node3D] = []

func stone_pos() -> Vector3:
	var pos = to_global((Vector3.FORWARD*Distance).rotated(Vector3.UP, randf()*PI*2.0))
	pos.y = 0
	return pos

func spawn_stone():
	var newStone = TombstonePrefab.instantiate() as Node3D
	TombstoneParent.add_child(newStone)
	newStone.global_position = stone_pos()
	stones.push_back(newStone)
	print(\"new stone at \", newStone.global_position )

func refresh_stones():
	# idea: check dir from old refpos, only move stones in that dir
	refPos = global_position
	var sqr = Distance*Distance + Buffer*Buffer
	
	for stone in stones:
		if stone.global_position.distance_squared_to(refPos) > sqr:
			stone.global_position = stone_pos()
	
	var newCount = min(MaxNewStones,StoneCapacity - stones.size())
	for i in newCount:
		spawn_stone.call_deferred()
	

func _ready() -> void:
	refresh_stones()

func _process(_delta: float) -> void:
	if refPos.distance_squared_to(global_position) > Buffer*Buffer:
		refresh_stones()
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_bpj4x"]
sky_curve = 0.47075
ground_bottom_color = Color(0.34375, 0.449436, 0.279994, 1)

[sub_resource type="Sky" id="Sky_bwetu"]
sky_material = SubResource("ProceduralSkyMaterial_bpj4x")

[sub_resource type="Environment" id="Environment_3gvms"]
background_mode = 2
sky = SubResource("Sky_bwetu")
glow_enabled = true

[sub_resource type="GDScript" id="GDScript_1mlub"]
script/source = "extends Camera3D
class_name PlayerCam

@export var YawParent: Node3D
@export var PitchParent: Node3D

@export var YawPitchSpeed: Vector2 = Vector2(0.5,0.5)
@export var StickYawPitchSpeed: Vector2 = Vector2(5,3)
@export var ZoomSpeed: float = 0.1

@export var PitchMinMax = Vector2(-80,80)
@export var ZoomMinMax = Vector2(-30,100)

@export var Follow: Node3D
@export var FollowSpeed: float = 1

var yaw =0
var pitch =0
var zoom = 0

var rightDown=false

func _ready() -> void:
	zoom = position.z
	yaw = YawParent.rotation.y
	pitch = PitchParent.rotation.x

func _input(event):
	# Mouse in viewport coordinates.
	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_RIGHT:
			rightDown= event.pressed
			if rightDown:
				Input.mouse_mode=Input.MOUSE_MODE_CONFINED_HIDDEN
			else:
				Input.mouse_mode=Input.MOUSE_MODE_VISIBLE
				
		elif event.button_index == MOUSE_BUTTON_WHEEL_UP:
			zoom-=ZoomSpeed
			zoom = maxf(zoom, ZoomMinMax.x)
		elif event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
			zoom+=ZoomSpeed
			zoom = minf(zoom, ZoomMinMax.y)
			
	elif event is InputEventMouseMotion && rightDown:
		yaw -= event.relative.x*YawPitchSpeed.x*0.01
		pitch -= event.relative.y*YawPitchSpeed.y*0.01
		pitch = maxf(pitch, deg_to_rad(PitchMinMax.x))
		pitch = minf(pitch, deg_to_rad(PitchMinMax.y))


func _process(delta: float) -> void:
	if Follow:
		YawParent.global_position = YawParent.global_position.move_toward(Follow.global_position, FollowSpeed*delta)
	
	var stick := Input.get_vector(\"yaw right\", \"yaw left\", \"pitch up\", \"pitch down\")
	yaw += stick.x * StickYawPitchSpeed.x*delta
	if abs(stick.y) > .3:
		pitch += stick.y * StickYawPitchSpeed.y*delta
		pitch = minf(maxf(pitch, deg_to_rad(PitchMinMax.x)), deg_to_rad(PitchMinMax.y))
	
	position.z = zoom
	# todo: lerp towards target using curve
	YawParent.rotation.y = yaw
	PitchParent.rotation.x = pitch
	
"

[sub_resource type="InputEventKey" id="InputEventKey_s7ljn"]
device = -1
keycode = 49
unicode = 49

[sub_resource type="Shortcut" id="Shortcut_yaauc"]
events = [SubResource("InputEventKey_s7ljn")]

[sub_resource type="Gradient" id="Gradient_y1efl"]
colors = PackedColorArray(0, 0, 0, 1, 0.337255, 0.345098, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_mu5u8"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_rsi8r"]
width = 64
height = 64
color_ramp = SubResource("Gradient_y1efl")
noise = SubResource("FastNoiseLite_mu5u8")

[sub_resource type="InputEventKey" id="InputEventKey_bpsxk"]
device = -1
keycode = 50
unicode = 50

[sub_resource type="Shortcut" id="Shortcut_t4snd"]
events = [SubResource("InputEventKey_bpsxk")]

[sub_resource type="Gradient" id="Gradient_fxs87"]
colors = PackedColorArray(0, 0, 0, 1, 0.293221, 0.536997, 0, 1)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_m8d7s"]
width = 64
height = 64
color_ramp = SubResource("Gradient_fxs87")
noise = SubResource("FastNoiseLite_mu5u8")

[sub_resource type="InputEventKey" id="InputEventKey_rry6p"]
device = -1
keycode = 51
unicode = 51

[sub_resource type="Shortcut" id="Shortcut_ojfdx"]
events = [SubResource("InputEventKey_rry6p")]

[sub_resource type="Gradient" id="Gradient_5lsmd"]
colors = PackedColorArray(0, 0, 0, 1, 0.529425, 0.402035, 0.614928, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_tbi6y"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_s2adm"]
width = 64
height = 64
color_ramp = SubResource("Gradient_5lsmd")
noise = SubResource("FastNoiseLite_tbi6y")

[sub_resource type="InputEventKey" id="InputEventKey_wdgcw"]
device = -1
keycode = 52
unicode = 52

[sub_resource type="Shortcut" id="Shortcut_am6fe"]
events = [SubResource("InputEventKey_wdgcw")]

[sub_resource type="Gradient" id="Gradient_wqy2k"]
colors = PackedColorArray(0, 0, 0, 1, 0.792095, 0.241497, 0.173587, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_mcrsn"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_hxibq"]
width = 64
height = 64
color_ramp = SubResource("Gradient_wqy2k")
noise = SubResource("FastNoiseLite_mcrsn")

[sub_resource type="GDScript" id="GDScript_lqlxe"]
script/source = "extends ColorRect

var initSize = 0.0
var hpBuffer = 0.0
@export var followBar: ColorRect # note: has to have same x scale as this bar
var parent: Control

func _ready() -> void:
	initSize = scale.x
	parent = get_parent()

func _process(delta: float) -> void:
	#parent.rotation_degrees = move_toward(parent.rotation_degrees, 70, delta*20)
	var px = Global.hp / 100 * initSize
	scale.x = px
	hpBuffer = move_toward(hpBuffer, px, delta*0.20)
	followBar.scale.x = hpBuffer
	
"

[node name="World" type="Node3D"]

[node name="BG" type="Node3D" parent="." node_paths=PackedStringArray("Tile")]
script = SubResource("GDScript_am0de")
Tile = NodePath("Tile")
tilingSize = Vector2(500, 500)
tilingDistance = 1000.0

[node name="Tile" type="StaticBody3D" parent="BG"]
transform = Transform3D(5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -10, 0)
shape = SubResource("BoxShape3D_q4vtr")

[node name="MeshInstance3D" type="MeshInstance3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
mesh = SubResource("QuadMesh_tn8qn")

[node name="Label3D" type="Label3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.56046, 0)
billboard = 1
text = "1"
font_size = 128

[node name="Player" type="Node3D" parent="." node_paths=PackedStringArray("DirRef")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
script = ExtResource("1_l8nk1")
DirRef = NodePath("../Cam Yaw")

[node name="Node3D" type="Node3D" parent="Player"]
transform = Transform3D(-0.908792, -4.47035e-08, -0.417248, 0.156304, 0.927184, -0.340439, 0.386866, -0.374607, -0.842618, -1.74846e-07, 1.30179, 0.552577)
script = SubResource("GDScript_wije0")
leftRot = Vector3(-20, -25, 10)
rightRot = Vector3(20, -155, 10)

[node name="PBR - Metallic Roughness Alpha-blend" parent="Player/Node3D" instance=ExtResource("14_ivteh")]
transform = Transform3D(-0.170834, 0.482077, -1.9335, 0, 1.9406, 0.483844, 1.99269, 0.0413285, -0.165759, -0.27955, 1.33054, -0.589949)

[node name="zombie spawns" type="Node3D" parent="Player"]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0.286009, 0)
visible = false

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -1.20845, 0, -0.0684231)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.500936, 0, 1.09076)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0.788902, 0, 0.857534)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D4" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 1.11729, 1.93715e-07, -0.490531)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D5" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.158705, 3.7998e-07, -1.18584)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="Sprite3D" type="Sprite3D" parent="Player"]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 2.85773, 0)
visible = false
cast_shadow = 0
gi_mode = 0
billboard = 2
texture_filter = 0
texture = ExtResource("1_nbkfe")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Player/Sprite3D"]
libraries = {
"": SubResource("AnimationLibrary_3ukah")
}
autoplay = "run"
speed_scale = 6.0

[node name="GPUParticles3D" type="GPUParticles3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.626271, 0)
amount = 32
process_material = SubResource("ParticleProcessMaterial_at773")
draw_pass_1 = SubResource("QuadMesh_4us6d")

[node name="RayCast3D" type="RayCast3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 8.08782, 0)

[node name="Tombstone Spawner" type="Node3D" parent="Player" node_paths=PackedStringArray("TombstoneParent")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0)
script = SubResource("GDScript_wn8fd")
TombstonePrefab = ExtResource("7_7h5fj")
TombstoneParent = NodePath("../..")
Distance = 100.0
Buffer = 50.0

[node name="Cam Yaw" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.06615, 10.4074, 12.4275)

[node name="Cam Pitch" type="Node3D" parent="Cam Yaw"]
transform = Transform3D(1, 0, 0, 0, 0.610145, 0.79229, 0, -0.79229, 0.610145, 0, 8.33149, 0)

[node name="Camera3D" type="Camera3D" parent="Cam Yaw/Cam Pitch" node_paths=PackedStringArray("YawParent", "PitchParent", "Follow")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 25.4999)
environment = SubResource("Environment_3gvms")
script = SubResource("GDScript_1mlub")
YawParent = NodePath("../..")
PitchParent = NodePath("..")
ZoomSpeed = 1.0
Follow = NodePath("../../../Player")
FollowSpeed = 99.0

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.848697, 0.441501, -0.291189, 0.252847, 0.144871, 0.956599, 0.464524, -0.885488, 0.0113199, 1.21989, 187.753, 0)

[node name="Enemies" type="Node3D" parent="."]

[node name="Zombie" parent="Enemies" instance=ExtResource("4_1pmvf")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -29.3078, 0, -13.2464)

[node name="HUD Canvas" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Toolbar" type="Control" parent="HUD Canvas"]
layout_mode = 1
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -143.0
grow_horizontal = 2
grow_vertical = 0

[node name="HBoxContainer" type="HBoxContainer" parent="HUD Canvas/Toolbar"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
alignment = 1

[node name="raise" type="Button" parent="HUD Canvas/Toolbar/HBoxContainer"]
custom_minimum_size = Vector2(99, 99)
layout_mode = 2
size_flags_vertical = 4
shortcut = SubResource("Shortcut_yaauc")
text = "raise"
icon = SubResource("NoiseTexture2D_rsi8r")
icon_alignment = 1

[node name="splode" type="Button" parent="HUD Canvas/Toolbar/HBoxContainer"]
custom_minimum_size = Vector2(99, 99)
layout_mode = 2
size_flags_vertical = 4
shortcut = SubResource("Shortcut_t4snd")
text = "splode"
icon = SubResource("NoiseTexture2D_m8d7s")
icon_alignment = 1

[node name="merge" type="Button" parent="HUD Canvas/Toolbar/HBoxContainer"]
custom_minimum_size = Vector2(99, 99)
layout_mode = 2
size_flags_vertical = 4
shortcut = SubResource("Shortcut_ojfdx")
text = "merge"
icon = SubResource("NoiseTexture2D_s2adm")
icon_alignment = 1

[node name="consoom" type="Button" parent="HUD Canvas/Toolbar/HBoxContainer"]
custom_minimum_size = Vector2(99, 99)
layout_mode = 2
size_flags_vertical = 4
shortcut = SubResource("Shortcut_am6fe")
text = "consoom"
icon = SubResource("NoiseTexture2D_hxibq")
icon_alignment = 1

[node name="ColorRect" type="ColorRect" parent="HUD Canvas"]
layout_mode = 0
offset_left = 20.0
offset_top = 49.0
offset_right = 359.0
offset_bottom = 89.0
rotation = 1.22173
color = Color(0.339634, 0.0013337, 0.591173, 1)

[node name="ColorRect3" type="ColorRect" parent="HUD Canvas/ColorRect"]
layout_mode = 0
offset_left = -4.44543
offset_top = 0.488035
offset_right = 314.555
offset_bottom = 29.488

[node name="ColorRect2" type="ColorRect" parent="HUD Canvas/ColorRect" node_paths=PackedStringArray("followBar")]
layout_mode = 0
offset_left = -7.15617
offset_top = -3.71337
offset_right = 311.844
offset_bottom = 25.2866
color = Color(0.662745, 0.388235, 1, 1)
script = SubResource("GDScript_lqlxe")
followBar = NodePath("../ColorRect3")

[node name="Label" type="Label" parent="HUD Canvas/ColorRect"]
layout_mode = 0
offset_left = 262.0
offset_top = 28.0
offset_right = 352.0
offset_bottom = 51.0
rotation = -0.13439
text = "Life Energy"

[node name="ColorRect2" type="ColorRect" parent="HUD Canvas"]
visible = false
layout_mode = 0
offset_left = 1158.0
offset_top = 56.0
offset_right = 1497.0
offset_bottom = 96.0
rotation = 1.89717
color = Color(0.128741, 0.267736, 0.385339, 1)

[node name="ColorRect3" type="ColorRect" parent="HUD Canvas/ColorRect2"]
layout_mode = 0
offset_left = -4.44469
offset_top = -3.77419
offset_right = 314.555
offset_bottom = 25.2258

[node name="ColorRect2" type="ColorRect" parent="HUD Canvas/ColorRect2" node_paths=PackedStringArray("followBar")]
layout_mode = 0
offset_left = -11.3811
offset_top = 0.685169
offset_right = 307.619
offset_bottom = 29.6852
color = Color(0.286241, 0.618919, 0.667757, 1)
script = SubResource("GDScript_lqlxe")
followBar = NodePath("../ColorRect3")

[node name="Label" type="Label" parent="HUD Canvas/ColorRect2"]
layout_mode = 0
offset_left = 326.995
offset_top = 70.9043
offset_right = 416.995
offset_bottom = 93.9043
rotation = -2.83895
text = "Life Energy"

[connection signal="on_flip" from="Player" to="Player/Node3D" method="turn"]
[connection signal="on_flip" from="Player" to="Player/Sprite3D" method="set_flip_h"]
[connection signal="on_move" from="Player" to="BG" method="update_pos"]
[connection signal="show_summon_circle" from="Player" to="Player/zombie spawns" method="set_visible"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D2" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D3" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D4" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D5" method="summon"]
[connection signal="pressed" from="HUD Canvas/Toolbar/HBoxContainer/raise" to="Player" method="equip_raise"]
[connection signal="pressed" from="HUD Canvas/Toolbar/HBoxContainer/splode" to="Player" method="equip_splode"]
[connection signal="pressed" from="HUD Canvas/Toolbar/HBoxContainer/merge" to="Player" method="equip_merge"]
[connection signal="pressed" from="HUD Canvas/Toolbar/HBoxContainer/consoom" to="Player" method="equip_consoom"]
