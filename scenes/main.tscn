[gd_scene load_steps=34 format=3 uid="uid://cg0lwr63age0v"]

[ext_resource type="QuadMesh" uid="uid://c72qv7tsxflig" path="res://gfx/summonCircleMesh.tres" id="1_7tuv2"]
[ext_resource type="Texture2D" uid="uid://c18busabi562l" path="res://gfx/Evil Wizard 3/Sprites/Run.png" id="1_nbkfe"]
[ext_resource type="Script" path="res://scripts/summonNode.gd" id="2_jlwc0"]
[ext_resource type="PackedScene" uid="uid://cjv1ybdpcwsqh" path="res://prefabs/zombie.tscn" id="4_1pmvf"]
[ext_resource type="Texture2D" uid="uid://b3emqeoocexpj" path="res://gfx/Wizard Pack/Run.png" id="4_mjgtt"]
[ext_resource type="Texture2D" uid="uid://b7yoid2efejrk" path="res://gfx/EVil Wizard 2/Sprites/Run.png" id="5_kddxm"]
[ext_resource type="Texture2D" uid="uid://dvsscef8tiv13" path="res://gfx/Evil Wizard/Sprites/Move.png" id="6_3bjep"]
[ext_resource type="Texture2D" uid="uid://iqtijin7wi10" path="res://gfx/Hero Knight 2/Sprites/Run.png" id="7_f1ved"]
[ext_resource type="Texture2D" uid="uid://vbeelnux8ub3" path="res://gfx/Medieval King Pack 2/Sprites/Run.png" id="8_leh5c"]
[ext_resource type="Texture2D" uid="uid://ccckh33e3yabh" path="res://gfx/Medieval Warrior Pack 2/Sprites/Run.png" id="9_rml13"]
[ext_resource type="Texture2D" uid="uid://bm4exy50t4o7q" path="res://gfx/Martial Hero 2/Sprites/Run.png" id="10_jps67"]
[ext_resource type="Texture2D" uid="uid://csyp2suf4wl5o" path="res://gfx/Martial Hero/Sprites/Run.png" id="11_3317n"]
[ext_resource type="PackedScene" uid="uid://gbc3ppf08ty" path="res://gfx/Goose/PBR - Metallic Roughness Alpha-blend.glb" id="13_t3ri6"]
[ext_resource type="PackedScene" uid="uid://bredvmgiq4u0x" path="res://gfx/Enviroment Assets/PBR - Metallic Roughness Alpha-blend.glb" id="14_s7det"]

[sub_resource type="GDScript" id="GDScript_am0de"]
script/source = "extends Node3D
class_name Tiler

@export var Tile: StaticBody3D
@export var tilingSize: Vector2 = Vector2(100,100)
@export var tilingDistance: float = 150
@export var tilingOffset: Vector2 = Vector2(0,0)

var tiles: Array[StaticBody3D] = []
var currentCenterTileIndex = 5

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	tiles.resize(9)
	tiles[0]=Tile
	for n in 8:
		tiles[n+1] = Tile.duplicate(DuplicateFlags.DUPLICATE_USE_INSTANTIATION)
		add_child(tiles[n+1])
	
	for x in 3:
		for y in 3:
			var i = 3*y+x
			tiles[i].position = Vector3(tilingSize.x * x, 0, tilingSize.y*y)
			tiles[i].get_child(2).text = str(i)

	
func flatPos(pos: Vector3) -> Vector2:
	return Vector2(pos.x, pos.z)
	
var lastDir: Vector2
var left = false
var right = false
var up = false
var down = false

func shouldTile(tilePos: Vector3, refPos: Vector2)-> bool:
	lastDir = flatPos(tilePos) - refPos
	
	up = false
	down = false
	right= false
	left = false
	
	if lastDir.x < -tilingDistance:
		left = true
		return true
	if lastDir.x > tilingDistance:
		right= true
		return true
	if lastDir.y < -tilingDistance:
		up = true
		return true
	if lastDir.y > tilingDistance:
		down = true
		return true
				
	return false
	
func update_pos(pos: Vector2):
	var refPos = pos + tilingOffset
	for x in 3:
		for y in 3:
			var i = y*3+x
			var tile = tiles[i]
			if shouldTile(tile.global_position, refPos):
				if left:
					tile.global_position.x += tilingSize.x *3
				elif right:
					tile.global_position.x -= tilingSize.x*3
				if up:
					tile.global_position.z += tilingSize.y*3
				elif down:
					tile.global_position.z -= tilingSize.y*3
				
"

[sub_resource type="BoxShape3D" id="BoxShape3D_q4vtr"]
size = Vector3(100, 20, 100)

[sub_resource type="Gradient" id="Gradient_ji2rm"]
colors = PackedColorArray(0.0463413, 0.164075, 0.204398, 1, 2.28621e-07, 0.351841, 0.211535, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2uepw"]
noise_type = 0
fractal_type = 3
domain_warp_enabled = true

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_5csxy"]
color_ramp = SubResource("Gradient_ji2rm")
noise = SubResource("FastNoiseLite_2uepw")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3pkho"]
disable_fog = true
albedo_texture = SubResource("NoiseTexture2D_5csxy")

[sub_resource type="QuadMesh" id="QuadMesh_tn8qn"]
material = SubResource("StandardMaterial3D_3pkho")
size = Vector2(100, 100)

[sub_resource type="GDScript" id="GDScript_jlvf1"]
script/source = "extends Node3D
class_name PlayerController

const JUMP_VELOCITY = 1
const GRAVITY = 0.980*5

@export var MoveSpeed: float = 60
@export var DirRef: Node3D


var velocity: Vector3 = Vector3.ZERO
var resetPos: Vector3
var wasLeft = false

signal on_move(pos: Vector2)
signal on_flip(left: bool)
signal show_summon_circle(on: bool)
signal summon

func is_on_floor() -> bool:
	return global_position.y < 0.01

func _ready() -> void:
	Global.player = self
	Global.add_friendly(self)
	resetPos = global_position

func die():
	Global.remove_friendly(self)

func revive():
	Global.add_friendly(self)

func shoot():
	# project mouse pos on plane? select closest enemy in range and send homing projectile?
	pass

func _input(event: InputEvent) -> void:
	
	if event is InputEventMouseButton:
		match event.button_index:
			MOUSE_BUTTON_RIGHT:
				show_summon_circle.emit(event.pressed)
				if !event.pressed:
					summon.emit()
			MOUSE_BUTTON_LEFT:
				if event.pressed:
					shoot()
	if event.is_action_pressed(\"quit\"):
		get_tree().quit()
	if event.is_action_pressed(\"reset player\"):
		global_position = resetPos
	

func _process(delta: float) -> void:
	
	# Add the gravity.
	if not is_on_floor():
		velocity.y += -GRAVITY * delta
	else:
		global_position.y = 0

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	var input_dir := Input.get_vector(\"a\", \"d\", \"w\", \"s\")
	if abs(input_dir.x) > 0.1 && (input_dir.x < 0) != wasLeft:
		wasLeft = !wasLeft
		on_flip.emit(wasLeft)
	
	var refBasis = transform.basis
	if DirRef:
		#direction = direction.rotated(DirRef.global_position.signed_angle_to(global_position, Vector3.DOWN))
		refBasis = DirRef.global_basis
		
	var direction := (refBasis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	
	if is_on_floor():
		if direction:
			velocity.x = direction.x * MoveSpeed * delta
			velocity.z = direction.z * MoveSpeed * delta
		else:
			velocity.x = move_toward(velocity.x, 0, MoveSpeed)
			velocity.z = move_toward(velocity.z, 0, MoveSpeed)
	
	global_position += velocity;
	if global_position.y < 0: global_position.y = 0
	
	on_move.emit(Vector2(global_position.x,global_position.z))
"

[sub_resource type="Animation" id="Animation_t3tpp"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_je5x1"]
resource_name = "run"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.889),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0, 7]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3ukah"]
_data = {
"RESET": SubResource("Animation_t3tpp"),
"run": SubResource("Animation_je5x1")
}

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_bpj4x"]
sky_curve = 0.47075
ground_bottom_color = Color(0.34375, 0.449436, 0.279994, 1)

[sub_resource type="Sky" id="Sky_bwetu"]
sky_material = SubResource("ProceduralSkyMaterial_bpj4x")

[sub_resource type="Environment" id="Environment_3gvms"]
background_mode = 2
sky = SubResource("Sky_bwetu")

[sub_resource type="GDScript" id="GDScript_1mlub"]
script/source = "extends Camera3D
class_name PlayerCam

@export var YawParent: Node3D
@export var PitchParent: Node3D

@export var YawPitchSpeed: Vector2 = Vector2(0.5,0.5)
@export var StickYawPitchSpeed: Vector2 = Vector2(5,3)
@export var ZoomSpeed: float = 0.1

@export var PitchMinMax = Vector2(-80,80)
@export var ZoomMinMax = Vector2(-30,100)

@export var Follow: Node3D
@export var FollowSpeed: float = 1

var yaw =0
var pitch =0
var zoom = 0

var rightDown=false

func _ready() -> void:
	zoom = position.z
	yaw = YawParent.rotation.y
	pitch = PitchParent.rotation.x

func _input(event):
	# Mouse in viewport coordinates.
	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_RIGHT:
			rightDown= event.pressed
			if rightDown:
				Input.mouse_mode=Input.MOUSE_MODE_CONFINED_HIDDEN
			else:
				Input.mouse_mode=Input.MOUSE_MODE_VISIBLE
				
		elif event.button_index == MOUSE_BUTTON_WHEEL_UP:
			zoom-=ZoomSpeed
			zoom = maxf(zoom, ZoomMinMax.x)
		elif event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
			zoom+=ZoomSpeed
			zoom = minf(zoom, ZoomMinMax.y)
			
	elif event is InputEventMouseMotion && rightDown:
		yaw -= event.relative.x*YawPitchSpeed.x*0.01
		pitch -= event.relative.y*YawPitchSpeed.y*0.01
		pitch = maxf(pitch, deg_to_rad(PitchMinMax.x))
		pitch = minf(pitch, deg_to_rad(PitchMinMax.y))


func _process(delta: float) -> void:
	if Follow:
		YawParent.global_position = YawParent.global_position.move_toward(Follow.global_position, FollowSpeed*delta)
	
	var stick := Input.get_vector(\"yaw right\", \"yaw left\", \"pitch up\", \"pitch down\")
	yaw += stick.x * StickYawPitchSpeed.x*delta
	if abs(stick.y) > .3:
		pitch += stick.y * StickYawPitchSpeed.y*delta
		pitch = minf(maxf(pitch, deg_to_rad(PitchMinMax.x)), deg_to_rad(PitchMinMax.y))
	
	position.z = zoom
	# todo: lerp towards target using curve
	YawParent.rotation.y = yaw
	PitchParent.rotation.x = pitch
	
"

[sub_resource type="Animation" id="Animation_rqm6h"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_8g5ho"]
resource_name = "run"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.93),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0, 7]
}

[sub_resource type="Animation" id="Animation_udv38"]
resource_name = "run4"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.9),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mllyv"]
_data = {
"RESET": SubResource("Animation_rqm6h"),
"run": SubResource("Animation_8g5ho"),
"run4": SubResource("Animation_udv38")
}

[node name="World" type="Node3D"]

[node name="BG" type="Node3D" parent="." node_paths=PackedStringArray("Tile")]
script = SubResource("GDScript_am0de")
Tile = NodePath("Tile")
tilingSize = Vector2(500, 500)
tilingDistance = 1000.0

[node name="Tile" type="StaticBody3D" parent="BG"]
transform = Transform3D(5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -10, 0)
shape = SubResource("BoxShape3D_q4vtr")

[node name="MeshInstance3D" type="MeshInstance3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
mesh = SubResource("QuadMesh_tn8qn")

[node name="Label3D" type="Label3D" parent="BG/Tile"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.56046, 0)
billboard = 1
text = "1"
font_size = 128

[node name="Player" type="Node3D" parent="." node_paths=PackedStringArray("DirRef")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.243298, 1, 0)
script = SubResource("GDScript_jlvf1")
DirRef = NodePath("../Cam Yaw")

[node name="zombie spawns" type="Node3D" parent="Player"]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0.286009, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -1.20845, 0, -0.0684231)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.500936, 0, 1.09076)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0.788902, 0, 0.857534)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D4" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 1.11729, 1.93715e-07, -0.490531)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="MeshInstance3D5" type="MeshInstance3D" parent="Player/zombie spawns"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.158705, 3.7998e-07, -1.18584)
mesh = ExtResource("1_7tuv2")
script = ExtResource("2_jlwc0")
zombie_prefab = ExtResource("4_1pmvf")

[node name="Sprite3D" type="Sprite3D" parent="Player"]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0.243908, 2.85773, 1.05199)
cast_shadow = 0
gi_mode = 0
billboard = 2
texture_filter = 0
texture = ExtResource("1_nbkfe")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Player/Sprite3D"]
libraries = {
"": SubResource("AnimationLibrary_3ukah")
}
autoplay = "run"
speed_scale = 6.0

[node name="Cam Yaw" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.06615, 10.4074, 12.4275)

[node name="Cam Pitch" type="Node3D" parent="Cam Yaw"]
transform = Transform3D(1, 0, 0, 0, 0.610145, 0.79229, 0, -0.79229, 0.610145, 0, 8.33149, 0)

[node name="Camera3D" type="Camera3D" parent="Cam Yaw/Cam Pitch" node_paths=PackedStringArray("YawParent", "PitchParent", "Follow")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 25.4999)
environment = SubResource("Environment_3gvms")
script = SubResource("GDScript_1mlub")
YawParent = NodePath("../..")
PitchParent = NodePath("..")
ZoomSpeed = 1.0
Follow = NodePath("../../../Player")
FollowSpeed = 99.0

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.848697, 0.441501, -0.291189, 0.252847, 0.144871, 0.956599, 0.464524, -0.885488, 0.0113199, 1.21989, 187.753, 0)

[node name="Enemies" type="Node3D" parent="."]

[node name="Zombie" parent="Enemies" instance=ExtResource("4_1pmvf")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -29.3078, 0, -13.2464)

[node name="Characters" type="Node3D" parent="."]

[node name="Wizard" type="Sprite3D" parent="Characters"]
transform = Transform3D(5, 0, 0, 0, 5, 0, 0, 0, 5, 14, 2.98386, 0)
billboard = 2
texture_filter = 0
texture = ExtResource("4_mjgtt")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Wizard"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 6.0

[node name="Evil Wizard" type="Sprite3D" parent="Characters"]
transform = Transform3D(5, 0, 0, 0, 5, 0, 0, 0, 5, 21.805, 2.98386, 0)
billboard = 2
texture_filter = 0
texture = ExtResource("5_kddxm")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Evil Wizard"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 6.0

[node name="Evil Wizard2" type="Sprite3D" parent="Characters"]
transform = Transform3D(6, 0, 0, 0, 6, 0, 0, 0, 6, 17.3946, 2.10592, 3.82197)
billboard = 2
texture_filter = 0
texture = ExtResource("6_3bjep")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Evil Wizard2"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 6.0

[node name="Sprite3D3" type="Sprite3D" parent="Characters"]
transform = Transform3D(8, 0, 0, 0, 8, 0, 0, 0, 8, 27.4198, 1.59398, 0)
billboard = 2
texture_filter = 0
texture = ExtResource("7_f1ved")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Sprite3D3"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 3.0

[node name="Sprite3D4" type="Sprite3D" parent="Characters"]
transform = Transform3D(8, 0, 0, 0, 8, 0, 0, 0, 8, 34.3918, 4.59625, -0.0107918)
billboard = 2
texture_filter = 0
texture = ExtResource("8_leh5c")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Sprite3D4"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 3.0

[node name="Sprite3D5" type="Sprite3D" parent="Characters"]
transform = Transform3D(8, 0, 0, 0, 8, 0, 0, 0, 8, 29.495, 2.83874, 5.57287)
billboard = 2
texture_filter = 0
texture = ExtResource("9_rml13")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Sprite3D5"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 3.0

[node name="Sprite3D6" type="Sprite3D" parent="Characters"]
transform = Transform3D(8, 0, 0, 0, 8, 0, 0, 0, 8, 8.38396, 2.83874, 17.262)
billboard = 2
texture_filter = 0
texture = ExtResource("10_jps67")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Sprite3D6"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 3.0

[node name="Sprite3D7" type="Sprite3D" parent="Characters"]
transform = Transform3D(8, 0, 0, 0, 8, 0, 0, 0, 8, 16.0673, 2.5076, 17.262)
billboard = 2
texture_filter = 0
texture = ExtResource("11_3317n")
hframes = 8

[node name="AnimationPlayer" type="AnimationPlayer" parent="Characters/Sprite3D7"]
libraries = {
"": SubResource("AnimationLibrary_mllyv")
}
autoplay = "run"
speed_scale = 3.0

[node name="PBR - Metallic Roughness Alpha-blend" parent="." instance=ExtResource("13_t3ri6")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.4393, 1.05005, 9.19189)

[node name="PBR - Metallic Roughness Alpha-blend2" parent="." instance=ExtResource("14_s7det")]
transform = Transform3D(-1.34764, -0.311041, -0.527035, 0, 1.6116, -0.327037, 0.905471, -0.462931, -0.7844, -10.1285, -0.148155, 4.91512)

[connection signal="on_flip" from="Player" to="Player/Sprite3D" method="set_flip_h"]
[connection signal="on_move" from="Player" to="BG" method="update_pos"]
[connection signal="show_summon_circle" from="Player" to="Player/zombie spawns" method="set_visible"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D2" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D3" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D4" method="summon"]
[connection signal="summon" from="Player" to="Player/zombie spawns/MeshInstance3D5" method="summon"]
